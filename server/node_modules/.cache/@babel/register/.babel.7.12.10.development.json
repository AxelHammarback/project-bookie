{
  "{\"sourceRoot\":\"/Users/axelhammarback/Technigo/W19 – Back-end/WK19LiveSession1-2020-lecture1-start/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/axelhammarback/Technigo/W19 – Back-end/WK19LiveSession1-2020-lecture1-start/server\",\"filename\":\"/Users/axelhammarback/Technigo/W19 – Back-end/WK19LiveSession1-2020-lecture1-start/server/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/axelhammarback/Technigo/W19 – Back-end/WK19LiveSession1-2020-lecture1-start/server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/axelhammarback/Technigo/W19 – Back-end/WK19LiveSession1-2020-lecture1-start/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/axelhammarback/Technigo/W19 – Back-end/WK19LiveSession1-2020-lecture1-start/server",
      "filename": "/Users/axelhammarback/Technigo/W19 – Back-end/WK19LiveSession1-2020-lecture1-start/server/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/axelhammarback/Technigo/W19 – Back-end/WK19LiveSession1-2020-lecture1-start/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/axelhammarback/Technigo/W19 – Back-end/WK19LiveSession1-2020-lecture1-start/server/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/axelhammarback/Technigo/W19 – Back-end/WK19LiveSession1-2020-lecture1-start/server/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/axelhammarback/Technigo/W19 – Back-end/WK19LiveSession1-2020-lecture1-start/server/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _technigoStaff = _interopRequireDefault(require(\"./data/technigo-staff.json\"));\n\nvar _technigoRoles = _interopRequireDefault(require(\"./data/technigo-roles.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/project-mongo';\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise;\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\nvar Member = new _mongoose[\"default\"].model('Member', {\n  name: String,\n  surname: String,\n  role: {\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: 'Role'\n  },\n  lettersInName: Number,\n  isPapa: Boolean\n});\nvar Role = new _mongoose[\"default\"].model('Role', {\n  description: String\n});\n\nif (process.env.RESET_DATABASE) {\n  // POPULATING DATABASE WITH TWO COLLECTIONS (WITH RELATIONS) - UNIVERSAL\n  var populateDatabase = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var roles;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return Role.deleteMany();\n\n            case 2:\n              _context3.next = 4;\n              return Member.deleteMany();\n\n            case 4:\n              // Next, we declare empty array in which we will later on\n              // store 3 instances (actual examples) of Role models\n              roles = [];\n\n              _technigoRoles[\"default\"].forEach( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(item) {\n                  var newRole;\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          newRole = new Role(item); // We push each newRole to array roles\n\n                          roles.push(newRole);\n                          _context.next = 4;\n                          return newRole.save();\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n\n              _technigoStaff[\"default\"].forEach( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(memberItem) {\n                  var newMember;\n                  return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          // We create new member for element in membersData array from JSON file\n                          // Important thing to notice: in JSON file we had property \"role\" with\n                          // hardcoded string value. We need it to detect which role model should\n                          // each member have. Later on, hardcoded \"role\" property will be\n                          // overwritten by new \"role\" property, the one with value of ObjectId type.\n                          // For further reference on that, check out last example from website below,\n                          // the one about keys collision : https://davidwalsh.name/merge-objects\n                          newMember = new Member(_objectSpread(_objectSpread({}, memberItem), {}, {\n                            role: roles.find(function (roleItem) {\n                              return roleItem.description === memberItem.role;\n                            })\n                          }));\n                          _context2.next = 3;\n                          return newMember.save();\n\n                        case 3:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function populateDatabase() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  populateDatabase();\n} // Start defining your routes here\n\n\napp.get('/', function (req, res) {\n  res.send('Hello wosrld');\n});\napp.get('/members', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var allMembers;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return Member.find(req.query);\n\n          case 2:\n            allMembers = _context4.sent;\n            res.json(allMembers);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.get('/members/:name', function (req, res) {\n  Member.findOne({\n    name: req.params.name\n  }).then(function (data) {\n    res.json(data);\n  })[\"catch\"](function (error) {\n    res.status(400).json({\n      error: 'Invalid name'\n    });\n  });\n});\napp.get('/members/role/:role', function (req, res) {\n  Member.find(req.params, function (err, data) {\n    res.json(data);\n  });\n});\napp.get('/members/:id/role', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var singleMember, singleMemberRole;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return Member.findById(req.params.id);\n\n          case 2:\n            singleMember = _context5.sent;\n            _context5.next = 5;\n            return Role.findById(singleMember.role);\n\n          case 5:\n            singleMemberRole = _context5.sent;\n\n            if (singleMemberRole) {\n              res.json(singleMemberRole);\n            } else {\n              res.json(404).json({\n                error: 'Not found'\n              });\n            }\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref5.apply(this, arguments);\n  };\n}()); /////////////////////////\n/// Week 19 endpoints ///\n/////////////////////////\n\napp[\"delete\"]('/members/:id', /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return Member.deleteOne({\n              _id: req.params.id\n            });\n\n          case 3:\n            // Send a successful response\n            res.status(200).json({\n              success: true\n            });\n            _context6.next = 10;\n            break;\n\n          case 6:\n            _context6.prev = 6;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.log(_context6.t0); // Inform the client about the deletion failure\n\n            res.status(400).json({\n              success: false\n            });\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 6]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref6.apply(this, arguments);\n  };\n}());\napp.post('/members', /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var newMember;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return new Member(req.body).save();\n\n          case 3:\n            newMember = _context7.sent;\n            res.status(200).json(newMember);\n            _context7.next = 11;\n            break;\n\n          case 7:\n            _context7.prev = 7;\n            _context7.t0 = _context7[\"catch\"](0);\n            console.log(_context7.t0);\n            res.status(400).json({\n              success: false,\n              error: _context7.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 7]]);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref7.apply(this, arguments);\n  };\n}()); // Start the server\n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "mongoUrl",
        "process",
        "env",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "port",
        "PORT",
        "app",
        "use",
        "bodyParser",
        "json",
        "Member",
        "model",
        "name",
        "String",
        "surname",
        "role",
        "type",
        "Schema",
        "Types",
        "ObjectId",
        "ref",
        "lettersInName",
        "Number",
        "isPapa",
        "Boolean",
        "Role",
        "description",
        "RESET_DATABASE",
        "populateDatabase",
        "deleteMany",
        "roles",
        "rolesData",
        "forEach",
        "item",
        "newRole",
        "push",
        "save",
        "membersData",
        "memberItem",
        "newMember",
        "find",
        "roleItem",
        "get",
        "req",
        "res",
        "send",
        "query",
        "allMembers",
        "findOne",
        "params",
        "then",
        "data",
        "error",
        "status",
        "err",
        "findById",
        "id",
        "singleMember",
        "singleMemberRole",
        "deleteOne",
        "_id",
        "success",
        "console",
        "log",
        "post",
        "body",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/axelhammarback/Technigo/W19 – Back-end/WK19LiveSession1-2020-lecture1-start/server/",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport mongoose from 'mongoose';\n\nimport membersData from './data/technigo-staff.json';\nimport rolesData from './data/technigo-roles.json';\n\nconst mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/project-mongo';\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true });\nmongoose.Promise = Promise;\n\nconst port = process.env.PORT || 8080;\nconst app = express();\n\napp.use(cors());\napp.use(bodyParser.json());\n\nconst Member = new mongoose.model('Member', {\n  name: String,\n  surname: String,\n  role: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Role',\n  },\n  lettersInName: Number,\n  isPapa: Boolean,\n});\n\nconst Role = new mongoose.model('Role', {\n  description: String,\n});\n\nif (process.env.RESET_DATABASE) {\n  // POPULATING DATABASE WITH TWO COLLECTIONS (WITH RELATIONS) - UNIVERSAL\n\n  const populateDatabase = async () => {\n    // First of all, we need to clear current content of two collections\n    await Role.deleteMany();\n    await Member.deleteMany();\n\n    // Next, we declare empty array in which we will later on\n    // store 3 instances (actual examples) of Role models\n    let roles = [];\n\n    rolesData.forEach(async (item) => {\n      const newRole = new Role(item);\n\n      // We push each newRole to array roles\n      roles.push(newRole);\n      await newRole.save();\n    });\n\n    membersData.forEach(async (memberItem) => {\n      // We create new member for element in membersData array from JSON file\n      // Important thing to notice: in JSON file we had property \"role\" with\n      // hardcoded string value. We need it to detect which role model should\n      // each member have. Later on, hardcoded \"role\" property will be\n      // overwritten by new \"role\" property, the one with value of ObjectId type.\n      // For further reference on that, check out last example from website below,\n      // the one about keys collision : https://davidwalsh.name/merge-objects\n      const newMember = new Member({\n        ...memberItem,\n        role: roles.find(\n          (roleItem) => roleItem.description === memberItem.role\n        ),\n      });\n      await newMember.save();\n    });\n  };\n  populateDatabase();\n}\n\n// Start defining your routes here\napp.get('/', (req, res) => {\n  res.send('Hello wosrld');\n});\n\napp.get('/members', async (req, res) => {\n  const allMembers = await Member.find(req.query);\n  res.json(allMembers);\n});\n\napp.get('/members/:name', (req, res) => {\n  Member.findOne({ name: req.params.name })\n    .then((data) => {\n      res.json(data);\n    })\n    .catch((error) => {\n      res.status(400).json({ error: 'Invalid name' });\n    });\n});\n\napp.get('/members/role/:role', (req, res) => {\n  Member.find(req.params, (err, data) => {\n    res.json(data);\n  });\n});\n\napp.get('/members/:id/role', async (req, res) => {\n  // Find for single member with ID from req.params\n  const singleMember = await Member.findById(req.params.id);\n\n  // Find role details for single member queried above\n  const singleMemberRole = await Role.findById(singleMember.role);\n\n  if (singleMemberRole) {\n    res.json(singleMemberRole);\n  } else {\n    res.json(404).json({ error: 'Not found' });\n  }\n});\n\n/////////////////////////\n/// Week 19 endpoints ///\n/////////////////////////\n\napp.delete('/members/:id', async (req, res) => {\n  try {\n    // Try to delete the user\n    await Member.deleteOne({ _id: req.params.id })\n    // Send a successful response\n    res.status(200).json({ success: true })\n\n  } catch (error) {\n    console.log(error)\n    // Inform the client about the deletion failure\n    res.status(400).json({ success: false })\n  }\n})\n\napp.post('/members', async (req, res) => {\n  try {\n    // Don't blindly send in the req.body in the DB.\n    const newMember = await new Member(req.body).save()\n    res.status(200).json(newMember)\n  } catch (error) {\n    console.log(error)\n    res.status(400).json({ success: false, error })\n  }\n})\n\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609790050272
  },
  "{\"sourceRoot\":\"/Users/axelhammarback/Technigo/W19 – Back-end happy thoughts/WK19LiveSession1-2020-lecture1-start/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/axelhammarback/Technigo/W19 – Back-end happy thoughts/WK19LiveSession1-2020-lecture1-start/server\",\"filename\":\"/Users/axelhammarback/Technigo/W19 – Back-end happy thoughts/WK19LiveSession1-2020-lecture1-start/server/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/axelhammarback/Technigo/W19 – Back-end happy thoughts/WK19LiveSession1-2020-lecture1-start/server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/axelhammarback/Technigo/W19 – Back-end happy thoughts/WK19LiveSession1-2020-lecture1-start/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/axelhammarback/Technigo/W19 – Back-end happy thoughts/WK19LiveSession1-2020-lecture1-start/server",
      "filename": "/Users/axelhammarback/Technigo/W19 – Back-end happy thoughts/WK19LiveSession1-2020-lecture1-start/server/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/axelhammarback/Technigo/W19 – Back-end happy thoughts/WK19LiveSession1-2020-lecture1-start/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/axelhammarback/Technigo/W19 – Back-end happy thoughts/WK19LiveSession1-2020-lecture1-start/server/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/axelhammarback/Technigo/W19 – Back-end happy thoughts/WK19LiveSession1-2020-lecture1-start/server/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/axelhammarback/Technigo/W19 – Back-end happy thoughts/WK19LiveSession1-2020-lecture1-start/server/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _technigoStaff = _interopRequireDefault(require(\"./data/technigo-staff.json\"));\n\nvar _technigoRoles = _interopRequireDefault(require(\"./data/technigo-roles.json\"));\n\nvar _books = _interopRequireDefault(require(\"./data/books.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/project-mongo';\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise;\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\nvar Member = new _mongoose[\"default\"].model('Member', {\n  name: String,\n  surname: String,\n  role: {\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: 'Role'\n  },\n  lettersInName: Number,\n  isPapa: Boolean\n});\nvar Role = new _mongoose[\"default\"].model('Role', {\n  description: String\n});\n\nif (process.env.RESET_DATABASE) {\n  // POPULATING DATABASE WITH TWO COLLECTIONS (WITH RELATIONS) - UNIVERSAL\n  var populateDatabase = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var roles;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return Role.deleteMany();\n\n            case 2:\n              _context3.next = 4;\n              return Member.deleteMany();\n\n            case 4:\n              // Next, we declare empty array in which we will later on\n              // store 3 instances (actual examples) of Role models\n              roles = [];\n\n              _technigoRoles[\"default\"].forEach( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(item) {\n                  var newRole;\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          newRole = new Role(item); // We push each newRole to array roles\n\n                          roles.push(newRole);\n                          _context.next = 4;\n                          return newRole.save();\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n\n              _technigoStaff[\"default\"].forEach( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(memberItem) {\n                  var newMember;\n                  return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          // We create new member for element in membersData array from JSON file\n                          // Important thing to notice: in JSON file we had property \"role\" with\n                          // hardcoded string value. We need it to detect which role model should\n                          // each member have. Later on, hardcoded \"role\" property will be\n                          // overwritten by new \"role\" property, the one with value of ObjectId type.\n                          // For further reference on that, check out last example from website below,\n                          // the one about keys collision : https://davidwalsh.name/merge-objects\n                          newMember = new Member(_objectSpread(_objectSpread({}, memberItem), {}, {\n                            role: roles.find(function (roleItem) {\n                              return roleItem.description === memberItem.role;\n                            })\n                          }));\n                          _context2.next = 3;\n                          return newMember.save();\n\n                        case 3:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function populateDatabase() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  populateDatabase();\n} // Start defining your routes here\n\n\napp.get('/', function (req, res) {\n  res.send('Hello wosrld');\n});\napp.get('/members', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var allMembers;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return Member.find(req.query);\n\n          case 2:\n            allMembers = _context4.sent;\n            res.json(allMembers);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.get('/members/:name', function (req, res) {\n  Member.findOne({\n    name: req.params.name\n  }).then(function (data) {\n    res.json(data);\n  })[\"catch\"](function (error) {\n    res.status(400).json({\n      error: 'Invalid name'\n    });\n  });\n});\napp.get('/members/role/:role', function (req, res) {\n  Member.find(req.params, function (err, data) {\n    res.json(data);\n  });\n});\napp.get('/members/:id/role', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var singleMember, singleMemberRole;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return Member.findById(req.params.id);\n\n          case 2:\n            singleMember = _context5.sent;\n            _context5.next = 5;\n            return Role.findById(singleMember.role);\n\n          case 5:\n            singleMemberRole = _context5.sent;\n\n            if (singleMemberRole) {\n              res.json(singleMemberRole);\n            } else {\n              res.json(404).json({\n                error: 'Not found'\n              });\n            }\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref5.apply(this, arguments);\n  };\n}()); /////////////////////////\n/// Week 19 endpoints ///\n/////////////////////////\n\napp[\"delete\"]('/members/:id', /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return Member.deleteOne({\n              _id: req.params.id\n            });\n\n          case 3:\n            // Send a successful response\n            res.status(200).json({\n              success: true\n            });\n            _context6.next = 10;\n            break;\n\n          case 6:\n            _context6.prev = 6;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.log(_context6.t0); // Inform the client about the deletion failure\n\n            res.status(400).json({\n              success: false\n            });\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 6]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref6.apply(this, arguments);\n  };\n}());\napp.post('/members', /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var newMember;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return new Member(req.body).save();\n\n          case 3:\n            newMember = _context7.sent;\n            res.status(200).json(newMember);\n            _context7.next = 11;\n            break;\n\n          case 7:\n            _context7.prev = 7;\n            _context7.t0 = _context7[\"catch\"](0);\n            console.log(_context7.t0);\n            res.status(400).json({\n              success: false,\n              error: _context7.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 7]]);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref7.apply(this, arguments);\n  };\n}()); // Start the server\n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "mongoUrl",
        "process",
        "env",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "port",
        "PORT",
        "app",
        "use",
        "bodyParser",
        "json",
        "Member",
        "model",
        "name",
        "String",
        "surname",
        "role",
        "type",
        "Schema",
        "Types",
        "ObjectId",
        "ref",
        "lettersInName",
        "Number",
        "isPapa",
        "Boolean",
        "Role",
        "description",
        "RESET_DATABASE",
        "populateDatabase",
        "deleteMany",
        "roles",
        "rolesData",
        "forEach",
        "item",
        "newRole",
        "push",
        "save",
        "membersData",
        "memberItem",
        "newMember",
        "find",
        "roleItem",
        "get",
        "req",
        "res",
        "send",
        "query",
        "allMembers",
        "findOne",
        "params",
        "then",
        "data",
        "error",
        "status",
        "err",
        "findById",
        "id",
        "singleMember",
        "singleMemberRole",
        "deleteOne",
        "_id",
        "success",
        "console",
        "log",
        "post",
        "body",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/axelhammarback/Technigo/W19 – Back-end happy thoughts/WK19LiveSession1-2020-lecture1-start/server/",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport mongoose from 'mongoose';\n\nimport membersData from './data/technigo-staff.json';\nimport rolesData from './data/technigo-roles.json';\nimport booksData from './data/books.json';\n\nconst mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/project-mongo';\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true });\nmongoose.Promise = Promise;\n\nconst port = process.env.PORT || 8080;\nconst app = express();\n\napp.use(cors());\napp.use(bodyParser.json());\n\nconst Member = new mongoose.model('Member', {\n  name: String,\n  surname: String,\n  role: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Role',\n  },\n  lettersInName: Number,\n  isPapa: Boolean,\n});\n\nconst Role = new mongoose.model('Role', {\n  description: String,\n});\n\nif (process.env.RESET_DATABASE) {\n  // POPULATING DATABASE WITH TWO COLLECTIONS (WITH RELATIONS) - UNIVERSAL\n\n  const populateDatabase = async () => {\n    // First of all, we need to clear current content of two collections\n    await Role.deleteMany();\n    await Member.deleteMany();\n\n    // Next, we declare empty array in which we will later on\n    // store 3 instances (actual examples) of Role models\n    let roles = [];\n\n    rolesData.forEach(async (item) => {\n      const newRole = new Role(item);\n\n      // We push each newRole to array roles\n      roles.push(newRole);\n      await newRole.save();\n    });\n\n    membersData.forEach(async (memberItem) => {\n      // We create new member for element in membersData array from JSON file\n      // Important thing to notice: in JSON file we had property \"role\" with\n      // hardcoded string value. We need it to detect which role model should\n      // each member have. Later on, hardcoded \"role\" property will be\n      // overwritten by new \"role\" property, the one with value of ObjectId type.\n      // For further reference on that, check out last example from website below,\n      // the one about keys collision : https://davidwalsh.name/merge-objects\n      const newMember = new Member({\n        ...memberItem,\n        role: roles.find(\n          (roleItem) => roleItem.description === memberItem.role\n        ),\n      });\n      await newMember.save();\n    });\n  };\n  populateDatabase();\n}\n\n// Start defining your routes here\napp.get('/', (req, res) => {\n  res.send('Hello wosrld');\n});\n\napp.get('/members', async (req, res) => {\n  const allMembers = await Member.find(req.query);\n  res.json(allMembers);\n});\n\napp.get('/members/:name', (req, res) => {\n  Member.findOne({ name: req.params.name })\n    .then((data) => {\n      res.json(data);\n    })\n    .catch((error) => {\n      res.status(400).json({ error: 'Invalid name' });\n    });\n});\n\napp.get('/members/role/:role', (req, res) => {\n  Member.find(req.params, (err, data) => {\n    res.json(data);\n  });\n});\n\napp.get('/members/:id/role', async (req, res) => {\n  // Find for single member with ID from req.params\n  const singleMember = await Member.findById(req.params.id);\n\n  // Find role details for single member queried above\n  const singleMemberRole = await Role.findById(singleMember.role);\n\n  if (singleMemberRole) {\n    res.json(singleMemberRole);\n  } else {\n    res.json(404).json({ error: 'Not found' });\n  }\n});\n\n/////////////////////////\n/// Week 19 endpoints ///\n/////////////////////////\n\napp.delete('/members/:id', async (req, res) => {\n  try {\n    // Try to delete the user\n    await Member.deleteOne({ _id: req.params.id })\n    // Send a successful response\n    res.status(200).json({ success: true })\n\n  } catch (error) {\n    console.log(error)\n    // Inform the client about the deletion failure\n    res.status(400).json({ success: false })\n  }\n})\n\napp.post('/members', async (req, res) => {\n  try {\n    // Don't blindly send in the req.body in the DB.\n    const newMember = await new Member(req.body).save()\n    res.status(200).json(newMember)\n  } catch (error) {\n    console.log(error)\n    res.status(400).json({ success: false, error })\n  }\n})\n\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611430882563
  },
  "{\"sourceRoot\":\"/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/server\",\"filename\":\"/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/server/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/server",
      "filename": "/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/server/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/server/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/server/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/server/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _books = _interopRequireDefault(require(\"./data/books.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/project-bookie';\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise;\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\nvar Member = new _mongoose[\"default\"].model('Member', {\n  name: String,\n  surname: String,\n  role: {\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: 'Role'\n  },\n  lettersInName: Number,\n  isPapa: Boolean\n});\nvar Role = new _mongoose[\"default\"].model('Role', {\n  description: String\n});\nvar Book = new _mongoose[\"default\"].model('Book', {\n  title: String,\n  author: String,\n  thumbnail: String,\n  googleId: String,\n  isRead: {\n    type: Boolean,\n    \"default\": false\n  },\n  dateRead: {\n    type: Date,\n    \"default\": function _default() {\n      return new Date();\n    }\n  },\n  rating: {\n    type: Number,\n    \"default\": null\n  }\n});\n\nif (process.env.RESET_DATABASE) {\n  var populateDatabase = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Book.deleteMany();\n\n            case 2:\n              _books[\"default\"].forEach( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(bookItem) {\n                  var newBook;\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          newBook = new Book(bookItem);\n                          _context.next = 3;\n                          return newBook.save();\n\n                        case 3:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function populateDatabase() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  populateDatabase();\n} // Start defining your routes here\n\n\napp.get('/', function (req, res) {\n  res.send('Yo this is the book project');\n}); // ========== MY ENDPOINTS ========== //\n// 1. Get all books\n\napp.get('/books', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var allBooks;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return Book.find();\n\n          case 2:\n            allBooks = _context3.sent;\n            res.json(allBooks);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x2, _x3) {\n    return _ref3.apply(this, arguments);\n  };\n}()); // 2. Post a new book\n\napp.post('/books', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var book;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return new Book({\n              title: req.body.title,\n              author: req.body.author\n            }).save();\n\n          case 3:\n            book = _context4.sent;\n            res.status(200).json(book);\n            _context4.next = 10;\n            break;\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](0);\n            res.status(400).json({\n              message: \"Something went wrong\"\n            });\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 7]]);\n  }));\n\n  return function (_x4, _x5) {\n    return _ref4.apply(this, arguments);\n  };\n}()); // 3. Get all books with isRead: true\n\napp.get('/books/wantToRead', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var allBooks;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return Book.find({\n              isRead: false\n            });\n\n          case 2:\n            allBooks = _context5.sent;\n            res.json(allBooks);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref5.apply(this, arguments);\n  };\n}()); // 3. Get all books with \"isRead\" = true\n\napp.get('/books/isRead', /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var readBooks;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return Book.find({\n              isRead: true\n            });\n\n          case 2:\n            readBooks = _context6.sent;\n            res.json(readBooks);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x8, _x9) {\n    return _ref6.apply(this, arguments);\n  };\n}()); // ========== END OF MY ENDPOINTS ========== //\n\napp.get('/members', /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var allMembers;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return Member.find(req.query);\n\n          case 2:\n            allMembers = _context7.sent;\n            res.json(allMembers);\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x10, _x11) {\n    return _ref7.apply(this, arguments);\n  };\n}());\napp.get('/members/:name', function (req, res) {\n  Member.findOne({\n    name: req.params.name\n  }).then(function (data) {\n    res.json(data);\n  })[\"catch\"](function (error) {\n    res.status(400).json({\n      error: 'Invalid name'\n    });\n  });\n});\napp.get('/members/role/:role', function (req, res) {\n  Member.find(req.params, function (err, data) {\n    res.json(data);\n  });\n});\napp.get('/members/:id/role', /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var singleMember, singleMemberRole;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return Member.findById(req.params.id);\n\n          case 2:\n            singleMember = _context8.sent;\n            _context8.next = 5;\n            return Role.findById(singleMember.role);\n\n          case 5:\n            singleMemberRole = _context8.sent;\n\n            if (singleMemberRole) {\n              res.json(singleMemberRole);\n            } else {\n              res.json(404).json({\n                error: 'Not found'\n              });\n            }\n\n          case 7:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x12, _x13) {\n    return _ref8.apply(this, arguments);\n  };\n}()); /////////////////////////\n/// Week 19 endpoints ///\n/////////////////////////\n\napp[\"delete\"]('/members/:id', /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            _context9.next = 3;\n            return Member.deleteOne({\n              _id: req.params.id\n            });\n\n          case 3:\n            // Send a successful response\n            res.status(200).json({\n              success: true\n            });\n            _context9.next = 10;\n            break;\n\n          case 6:\n            _context9.prev = 6;\n            _context9.t0 = _context9[\"catch\"](0);\n            console.log(_context9.t0); // Inform the client about the deletion failure\n\n            res.status(400).json({\n              success: false\n            });\n\n          case 10:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[0, 6]]);\n  }));\n\n  return function (_x14, _x15) {\n    return _ref9.apply(this, arguments);\n  };\n}());\napp.post('/members', /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var newMember;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            _context10.next = 3;\n            return new Member(req.body).save();\n\n          case 3:\n            newMember = _context10.sent;\n            res.status(200).json(newMember);\n            _context10.next = 11;\n            break;\n\n          case 7:\n            _context10.prev = 7;\n            _context10.t0 = _context10[\"catch\"](0);\n            console.log(_context10.t0);\n            res.status(400).json({\n              success: false,\n              error: _context10.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[0, 7]]);\n  }));\n\n  return function (_x16, _x17) {\n    return _ref10.apply(this, arguments);\n  };\n}()); // Start the server\n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "mongoUrl",
        "process",
        "env",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "port",
        "PORT",
        "app",
        "use",
        "bodyParser",
        "json",
        "Member",
        "model",
        "name",
        "String",
        "surname",
        "role",
        "type",
        "Schema",
        "Types",
        "ObjectId",
        "ref",
        "lettersInName",
        "Number",
        "isPapa",
        "Boolean",
        "Role",
        "description",
        "Book",
        "title",
        "author",
        "thumbnail",
        "googleId",
        "isRead",
        "dateRead",
        "Date",
        "rating",
        "RESET_DATABASE",
        "populateDatabase",
        "deleteMany",
        "booksData",
        "forEach",
        "bookItem",
        "newBook",
        "save",
        "get",
        "req",
        "res",
        "send",
        "find",
        "allBooks",
        "post",
        "body",
        "book",
        "status",
        "message",
        "readBooks",
        "query",
        "allMembers",
        "findOne",
        "params",
        "then",
        "data",
        "error",
        "err",
        "findById",
        "id",
        "singleMember",
        "singleMemberRole",
        "deleteOne",
        "_id",
        "success",
        "console",
        "log",
        "newMember",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/server/",
      "sourcesContent": [
        "import express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport mongoose from 'mongoose'\n\nimport booksData from './data/books.json'\n\nconst mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/project-bookie'\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true })\nmongoose.Promise = Promise\n\nconst port = process.env.PORT || 8080\nconst app = express()\n\napp.use(cors())\napp.use(bodyParser.json())\n\nconst Member = new mongoose.model('Member', {\n  name: String,\n  surname: String,\n  role: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Role',\n  },\n  lettersInName: Number,\n  isPapa: Boolean,\n})\n\nconst Role = new mongoose.model('Role', {\n  description: String,\n})\n\nconst Book = new mongoose.model('Book', {\n  title: String,\n  author: String,\n  thumbnail: String,\n  googleId: String,\n  isRead: {\n    type: Boolean,\n    default: false,\n  },\n  dateRead: {\n    type: Date,\n    default: () => new Date()\n  },\n  rating: {\n    type: Number,\n    default: null\n  },\n})\n\n\nif (process.env.RESET_DATABASE) {\n  const populateDatabase = async () => {\n    // Clear database\n    await Book.deleteMany()\n\n    booksData.forEach(async bookItem => {\n      const newBook = new Book(bookItem)\n      await newBook.save()\n    })\n  }\n  populateDatabase()\n}\n\n// Start defining your routes here\napp.get('/', (req, res) => {\n  res.send('Yo this is the book project')\n})\n\n// ========== MY ENDPOINTS ========== //\n\n\n// 1. Get all books\napp.get('/books', async (req, res) => {\n  const allBooks = await Book.find()\n  res.json(allBooks)\n})\n\n// 2. Post a new book\napp.post('/books', async (req, res) => {\n  try {\n    // Success code – what happens if all goes well. We need to take a few things out of the body, and save them into the database.\n    const book = await new Book({\n      title: req.body.title,\n      author: req.body.author,\n    }).save()\n    res.status(200).json(book)\n  } catch (err) {\n    res.status(400).json({ message: \"Something went wrong\" })\n  }\n})\n\n// 3. Get all books with isRead: true\napp.get('/books/wantToRead', async (req, res) => {\n  const allBooks = await Book.find({ isRead: false })\n  res.json(allBooks)\n})\n\n// 3. Get all books with \"isRead\" = true\napp.get('/books/isRead', async (req, res) => {\n  const readBooks = await Book.find({ isRead: true })\n  res.json(readBooks)\n})\n\n// ========== END OF MY ENDPOINTS ========== //\n\napp.get('/members', async (req, res) => {\n  const allMembers = await Member.find(req.query)\n  res.json(allMembers)\n})\n\napp.get('/members/:name', (req, res) => {\n  Member.findOne({ name: req.params.name })\n    .then((data) => {\n      res.json(data)\n    })\n    .catch((error) => {\n      res.status(400).json({ error: 'Invalid name' })\n    })\n})\n\napp.get('/members/role/:role', (req, res) => {\n  Member.find(req.params, (err, data) => {\n    res.json(data)\n  })\n})\n\napp.get('/members/:id/role', async (req, res) => {\n  // Find for single member with ID from req.params\n  const singleMember = await Member.findById(req.params.id)\n\n  // Find role details for single member queried above\n  const singleMemberRole = await Role.findById(singleMember.role)\n\n  if (singleMemberRole) {\n    res.json(singleMemberRole)\n  } else {\n    res.json(404).json({ error: 'Not found' })\n  }\n})\n\n/////////////////////////\n/// Week 19 endpoints ///\n/////////////////////////\n\napp.delete('/members/:id', async (req, res) => {\n  try {\n    // Try to delete the user\n    await Member.deleteOne({ _id: req.params.id })\n    // Send a successful response\n    res.status(200).json({ success: true })\n\n  } catch (error) {\n    console.log(error)\n    // Inform the client about the deletion failure\n    res.status(400).json({ success: false })\n  }\n})\n\napp.post('/members', async (req, res) => {\n  try {\n    // Don't blindly send in the req.body in the DB.\n    const newMember = await new Member(req.body).save()\n    res.status(200).json(newMember)\n  } catch (error) {\n    console.log(error)\n    res.status(400).json({ success: false, error })\n  }\n})\n\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`)\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611599804499
  }
}