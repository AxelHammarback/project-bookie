{"ast":null,"code":"var _jsxFileName = \"/Users/axelhammarback/Technigo/W21 \\u2013\\xA0Final Project (Bookie)/project-bookie/client/src/components/HasRead.js\";\nimport React, { useEffect, useState } from 'react';\nimport { BookCardHasRead } from './BookCardHasRead';\nexport const HasRead = () => {\n  const BOOKS_URL = 'http://localhost:8080/books/isRead';\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    fetchBooks();\n  }, []);\n\n  const fetchBooks = () => {\n    // do a fetch to the local database\n    fetch(BOOKS_URL).then(res => {\n      // convert the resonse into json format\n      console.log(res);\n      return res.json();\n    }).then(data => {\n      // NEED TO FILTER ON BOOKS WITH THE ISREAD=FALSE FLAG HERE\n      const filteredBooks = data.filter(book => book.title);\n      setBooks(filteredBooks);\n      console.log(\"filteredBooks\");\n      console.log(filteredBooks);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"debug grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, books.map(book => /*#__PURE__*/React.createElement(BookCardWantToRead, {\n    author: book.author,\n    title: book.title,\n    googleId: book.googleId,\n    isRead: book.isRead,\n    thumbnail: book.thumbnail,\n    key: book._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/client/src/components/HasRead.js"],"names":["React","useEffect","useState","BookCardHasRead","HasRead","BOOKS_URL","books","setBooks","fetchBooks","fetch","then","res","console","log","json","data","filteredBooks","filter","book","title","map","author","googleId","isRead","thumbnail","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,QAAMC,SAAS,GAAG,oCAAlB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,MAAM;AACvB;AACAC,IAAAA,KAAK,CAACJ,SAAD,CAAL,CACGK,IADH,CACSC,GAAD,IAAS;AACb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAOA,GAAG,CAACG,IAAJ,EAAP;AACD,KALH,EAMGJ,IANH,CAMSK,IAAD,IAAU;AACd;AACA,YAAMC,aAAa,GAAGD,IAAI,CAACE,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,KAAzB,CAAtB;AACAZ,MAAAA,QAAQ,CAACS,aAAD,CAAR;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYG,aAAZ;AACD,KAZH;AAaD,GAfD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIV,KAAK,CAACc,GAAN,CAAUF,IAAI,iBACZ,oBAAC,kBAAD;AACE,IAAA,MAAM,EAAEA,IAAI,CAACG,MADf;AAEE,IAAA,KAAK,EAAEH,IAAI,CAACC,KAFd;AAGE,IAAA,QAAQ,EAAED,IAAI,CAACI,QAHjB;AAIE,IAAA,MAAM,EAAEJ,IAAI,CAACK,MAJf;AAKE,IAAA,SAAS,EAAEL,IAAI,CAACM,SALlB;AAME,IAAA,GAAG,EAAEN,IAAI,CAACO,GANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF,CADF;AAkBD,CA3CM","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { BookCardHasRead } from './BookCardHasRead'\n\nexport const HasRead = () => {\n  const BOOKS_URL = 'http://localhost:8080/books/isRead'\n  const [books, setBooks] = useState([])\n\n  useEffect(() => {\n    fetchBooks()\n  }, [])\n\n  const fetchBooks = () => {\n    // do a fetch to the local database\n    fetch(BOOKS_URL)\n      .then((res) => {\n        // convert the resonse into json format\n        console.log(res)\n        return res.json()\n      })\n      .then((data) => {\n        // NEED TO FILTER ON BOOKS WITH THE ISREAD=FALSE FLAG HERE\n        const filteredBooks = data.filter(book => book.title)\n        setBooks(filteredBooks)\n        console.log(\"filteredBooks\")\n        console.log(filteredBooks)\n      })\n  }\n\n  return (\n    <div className=\"debug grow\">\n      <section className=\"card-list\">\n        {\n          books.map(book => (\n            <BookCardWantToRead\n              author={book.author}\n              title={book.title}\n              googleId={book.googleId}\n              isRead={book.isRead}\n              thumbnail={book.thumbnail}\n              key={book._id}\n            />\n          ))\n        }\n      </section>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}