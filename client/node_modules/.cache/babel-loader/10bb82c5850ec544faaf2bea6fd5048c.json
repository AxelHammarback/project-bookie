{"ast":null,"code":"var _jsxFileName = \"/Users/axelhammarback/Technigo/W21 \\u2013\\xA0Final Project (Bookie)/project-bookie/client/src/components/BookCardSearch.js\";\nimport React from 'react';\nimport './card.css';\nexport const BookCardSearch = props => {\n  const BOOKS_POST_URL = 'http://localhost:8080/books';\n\n  const addBook = book => {\n    const bookObject = {\n      title: bookObject.title,\n      author: bookObject.author,\n      thumbnail: bookObject.thumbnail,\n      googleId: bookObject.googleId\n    };\n    fetch(BOOKS_POST_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(bookObject)\n    }).then(() => {\n      console.log(book.thumbnail); // When the message is done being posted, fetch the messages again, so the new post is visible.\n\n      console.log(`Book ${book.title} added`);\n    });\n  }; // title: String,\n  // author: String,\n  // thumbnail: String,\n  // googleId: String,\n  // isRead: {\n  //   type: Boolean,\n  //   default: false,\n  // },\n  // dateRead: {\n  //   type: Date,\n  //   default: () => new Date()\n  // },\n  // rating: {\n  //   type: Number,\n  //   default: null\n  // },\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-thumbnail\",\n    style: {\n      backgroundImage: `url(${props.thumbnail})`,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-info-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"h3-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"p-author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, props.author)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-info-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addBook(props),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"\\u25C6\")));\n};","map":{"version":3,"sources":["/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/client/src/components/BookCardSearch.js"],"names":["React","BookCardSearch","props","BOOKS_POST_URL","addBook","book","bookObject","title","author","thumbnail","googleId","fetch","method","headers","body","JSON","stringify","then","console","log","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAEA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAEvC,QAAMC,cAAc,GAAG,6BAAvB;;AAEA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AAExB,UAAMC,UAAU,GAAG;AACjBC,MAAAA,KAAK,EAAED,UAAU,CAACC,KADD;AAEjBC,MAAAA,MAAM,EAAEF,UAAU,CAACE,MAFF;AAGjBC,MAAAA,SAAS,EAAEH,UAAU,CAACG,SAHL;AAIjBC,MAAAA,QAAQ,EAAEJ,UAAU,CAACI;AAJJ,KAAnB;AAOAC,IAAAA,KAAK,CAACR,cAAD,EAAiB;AACpBS,MAAAA,MAAM,EAAE,MADY;AAEpBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFW;AAGpBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,UAAf;AAHc,KAAjB,CAAL,CAKGW,IALH,CAKQ,MAAM;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACI,SAAjB,EADU,CAEV;;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAa,QAAOd,IAAI,CAACE,KAAM,QAA/B;AACD,KATH;AAUD,GAnBD,CAJuC,CAyBvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,KAAK,EAAE;AACrCa,MAAAA,eAAe,EAAG,OAAMlB,KAAK,CAACO,SAAU,GADH;AAErCY,MAAAA,kBAAkB,EAAE,QAFiB;AAGrCC,MAAAA,cAAc,EAAE,OAHqB;AAIrCC,MAAAA,gBAAgB,EAAE;AAJmB,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BrB,KAAK,CAACK,KAAhC,CADF,eAEE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBL,KAAK,CAACM,MAA/B,CAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAKJ,OAAO,CAACF,KAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CALF,CARF,eAiBE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAjBF,CADF;AAuBD,CAjEM","sourcesContent":["import React from 'react'\nimport './card.css'\n\nexport const BookCardSearch = (props) => {\n\n  const BOOKS_POST_URL = 'http://localhost:8080/books'\n\n  const addBook = (book) => {\n    \n    const bookObject = {\n      title: bookObject.title,\n      author: bookObject.author,\n      thumbnail: bookObject.thumbnail,\n      googleId: bookObject.googleId\n    }\n\n    fetch(BOOKS_POST_URL, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(bookObject)\n    })\n      .then(() => {\n        console.log(book.thumbnail)\n        // When the message is done being posted, fetch the messages again, so the new post is visible.\n        console.log(`Book ${book.title} added`)\n      })\n  }\n\n  // title: String,\n  // author: String,\n  // thumbnail: String,\n  // googleId: String,\n  // isRead: {\n  //   type: Boolean,\n  //   default: false,\n  // },\n  // dateRead: {\n  //   type: Date,\n  //   default: () => new Date()\n  // },\n  // rating: {\n  //   type: Number,\n  //   default: null\n  // },\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-thumbnail\" style={{\n        backgroundImage: `url(${props.thumbnail})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n      }}>\n      </div>\n      <div className=\"card-info\">\n        <div className=\"card-info-top\">\n          <h3 className=\"h3-title\">{props.title}</h3>\n          <p className=\"p-author\">{props.author}</p>\n        </div>\n        <div className=\"card-info-bottom\">\n          <button onClick={()=> addBook(props)}>Add</button>\n        </div>\n      </div>\n      <div className=\"card-actions\">\n        <p>◆</p>\n      </div>\n    </div >\n  )\n}"]},"metadata":{},"sourceType":"module"}