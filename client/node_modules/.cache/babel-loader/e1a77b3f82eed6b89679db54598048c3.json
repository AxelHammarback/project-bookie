{"ast":null,"code":"var _jsxFileName = \"/Users/axelhammarback/Technigo/W21 \\u2013\\xA0Final Project (Bookie)/project-bookie/client/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { Nav } from './components/Nav';\nimport { WantToRead } from './components/WantToRead';\nimport { HasRead } from './components/HasRead';\nimport { Search } from './components/Search';\nimport 'index.css';\nexport const App = () => {\n  const BOOKS_POST_URL = 'http://localhost:8080/books';\n\n  const addBook = book => {\n    const bookObject = {\n      title: book.title,\n      author: book.author,\n      thumbnail: book.thumbnail,\n      googleId: book.googleId,\n      rating: null\n    };\n    fetch(BOOKS_POST_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(bookObject)\n    }).then(() => {\n      console.log(bookObject.thumbnail); // When the message is done being posted, fetch the messages again, so the new post is visible.\n\n      console.log(`Book ${bookObject.title} added`);\n    });\n  };\n\n  const deleteBook = googleId => {\n    fetch(`localhost:8080/books/${googleId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        googleId: googleId\n      })\n    }).then(() => {\n      console.log(`Book with ID: ${googleId} deleted from database.`);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(WantToRead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/hasread\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(HasRead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/client/src/App.js"],"names":["React","BrowserRouter","Switch","Route","Header","Nav","WantToRead","HasRead","Search","App","BOOKS_POST_URL","addBook","book","bookObject","title","author","thumbnail","googleId","rating","fetch","method","headers","body","JSON","stringify","then","console","log","deleteBook"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Header } from './components/Header'\nimport { Nav } from './components/Nav'\nimport { WantToRead } from './components/WantToRead'\nimport { HasRead } from './components/HasRead'\nimport { Search } from './components/Search'\nimport 'index.css'\n\nexport const App = () => {\n  const BOOKS_POST_URL = 'http://localhost:8080/books'\n\n  const addBook = (book) => {\n    const bookObject = {\n      title: book.title,\n      author: book.author,\n      thumbnail: book.thumbnail,\n      googleId: book.googleId,\n      rating: null\n    }\n\n    fetch(BOOKS_POST_URL, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(bookObject)\n    })\n      .then(() => {\n        console.log(bookObject.thumbnail)\n        // When the message is done being posted, fetch the messages again, so the new post is visible.\n        console.log(`Book ${bookObject.title} added`)\n      })\n  }\n\n\n  const deleteBook = (googleId) => {\n    fetch(`localhost:8080/books/${googleId}`, {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({googleId: googleId})\n    })\n      .then(() => {\n        console.log(`Book with ID: ${googleId} deleted from database.`)\n      })\n\n  }\n\n  return (\n    <>\n      <BrowserRouter>\n        <main>\n          <Header />\n          <div className=\"page-content\">\n            <Switch>\n\n              <Route path=\"/\" exact>\n                <WantToRead />\n              </Route>\n\n              <Route path=\"/hasread\">\n                <HasRead />\n              </Route>\n\n              <Route path=\"/search\">\n                <Search />\n              </Route>\n\n            </Switch>\n          </div>\n          <Nav />\n        </main>\n      </BrowserRouter>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}