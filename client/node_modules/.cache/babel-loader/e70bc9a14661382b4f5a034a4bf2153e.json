{"ast":null,"code":"var _jsxFileName = \"/Users/axelhammarback/Technigo/W21 \\u2013\\xA0Final Project (Bookie)/project-bookie/client/src/pages/HasRead.js\";\nimport React, { useEffect, useState } from 'react';\nimport { BookCardHasRead } from '../components/BookCardHasRead';\nimport { Header } from '../components/Header';\nexport const HasRead = () => {\n  const BOOKS_URL = 'https://bookie-axel.herokuapp.com/books/isRead';\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    fetchBooks();\n  }, []);\n\n  const setReadStatusToFalse = _id => {\n    fetch(`https://bookie-axel.herokuapp.com/books/${_id}`, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        isRead: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json().then(json => {\n      // console.log(\"Book updated so that the read status is 'false'\")\n      fetchBooks();\n      return json;\n    }));\n  };\n\n  const deleteBook = _id => {\n    fetch(`https://bookie-axel.herokuapp.com/books/${_id}`, {\n      method: 'DELETE'\n    }).then(res => res.json().then(json => {\n      // console.log(\"Book deleted successfully\")\n      fetchBooks();\n      return json;\n    }));\n  };\n\n  const rateBook = (_id, rating) => {\n    fetch(`https://bookie-axel.herokuapp.com/books/setRating/${_id}/${rating}`, {\n      method: 'PATCH'\n    }).then(res => res.json().then(json => {\n      // console.log(\"Rating edited successfully\")\n      fetchBooks();\n      return json;\n    }));\n  };\n\n  const fetchBooks = () => {\n    // do a fetch to the local database\n    fetch(BOOKS_URL).then(res => {\n      // convert the resonse into json format\n      console.log(res);\n      return res.json();\n    }).then(data => {\n      const filteredBooks = data.filter(book => book.title);\n      setBooks(filteredBooks);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    icon: \"ic_isRead\",\n    title: \"Books I've read\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, books.map(book => /*#__PURE__*/React.createElement(BookCardHasRead, {\n    _id: book._id,\n    author: book.author,\n    title: book.title,\n    googleId: book.googleId,\n    isRead: book.isRead,\n    thumbnail: book.thumbnail,\n    rating: book.rating,\n    key: book._id,\n    onRateBook: rateBook,\n    onDeleteBook: deleteBook,\n    onMarkAsNotRead: setReadStatusToFalse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/client/src/pages/HasRead.js"],"names":["React","useEffect","useState","BookCardHasRead","Header","HasRead","BOOKS_URL","books","setBooks","fetchBooks","setReadStatusToFalse","_id","fetch","method","body","JSON","stringify","isRead","headers","then","res","json","deleteBook","rateBook","rating","console","log","data","filteredBooks","filter","book","title","map","author","googleId","thumbnail"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { BookCardHasRead } from '../components/BookCardHasRead'\nimport { Header } from '../components/Header'\n\nexport const HasRead = () => {\n  const BOOKS_URL = 'https://bookie-axel.herokuapp.com/books/isRead'\n  const [books, setBooks] = useState([])\n\n  useEffect(() => {\n    fetchBooks()\n  }, [])\n\n  const setReadStatusToFalse = (_id) => {\n    fetch(`https://bookie-axel.herokuapp.com/books/${_id}`, {\n      method: 'PATCH',\n      body: JSON.stringify({ isRead: true }),\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then(res =>\n        res.json().then(json => {\n          // console.log(\"Book updated so that the read status is 'false'\")\n          fetchBooks()\n          return json;\n        })\n      );\n  }\n\n  const deleteBook = (_id) => {\n    fetch(`https://bookie-axel.herokuapp.com/books/${_id}`, {\n      method: 'DELETE',\n    })\n      .then(res =>\n        res.json().then(json => {\n          // console.log(\"Book deleted successfully\")\n          fetchBooks()\n          return json\n        })\n      )\n  }\n\n  const rateBook = (_id, rating) => {\n    fetch(`https://bookie-axel.herokuapp.com/books/setRating/${_id}/${rating}`, {\n      method: 'PATCH'\n    })\n      .then(res =>\n        res.json().then(json => {\n          // console.log(\"Rating edited successfully\")\n          fetchBooks()\n          return json\n        })\n      )\n  }\n\n  const fetchBooks = () => {\n    // do a fetch to the local database\n    fetch(BOOKS_URL)\n      .then((res) => {\n        // convert the resonse into json format\n        console.log(res)\n        return res.json()\n      })\n      .then((data) => {\n        const filteredBooks = data.filter(book => book.title)\n        setBooks(filteredBooks)\n      })\n  }\n\n  return (\n\n    <div>\n      <Header\n        icon=\"ic_isRead\"\n        title=\"Books I've read\"\n      />\n      <section className=\"card-list\">\n        {\n          books.map(book => (\n            <BookCardHasRead\n              _id={book._id}\n              author={book.author}\n              title={book.title}\n              googleId={book.googleId}\n              isRead={book.isRead}\n              thumbnail={book.thumbnail}\n              rating={book.rating}\n              key={book._id}\n              onRateBook={rateBook}\n              onDeleteBook={deleteBook}\n              onMarkAsNotRead={setReadStatusToFalse}\n            />\n          ))\n        }\n      </section>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}