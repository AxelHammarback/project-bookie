{"ast":null,"code":"var _jsxFileName = \"/Users/axelhammarback/Technigo/W21 \\u2013\\xA0Final Project (Bookie)/project-bookie/client/src/components/Search.js\";\nimport React, { useEffect, useState } from 'react';\nimport { BookCardSearch } from './BookCardSearch';\nimport { Header } from './Header'; // import './search.css'\n\nimport { SearchBar } from './SearchBar';\nexport const Search = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    key: \"search\",\n    title: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SearchBar, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), searchResults.map(book =>\n  /*#__PURE__*/\n  // console.log(typeof book.volumeInfo.imageLinks.thumbnail),\n  React.createElement(BookCardSearch // Since some entries had \"undefined\" as author, we need to check whether the author(s) exist or not.\n  , {\n    author: Array.isArray(book.volumeInfo.authors) ? book.volumeInfo.authors[0] : 'Unknown author',\n    title: book.volumeInfo.title,\n    thumbnail: typeof book.volumeInfo.imageLinks !== \"undefined\" ? book.volumeInfo.imageLinks.thumbnail : \"Has no image\",\n    key: book.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }) // <p>{book.volumeInfo.title}</p>\n  ));\n};","map":{"version":3,"sources":["/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/client/src/components/Search.js"],"names":["React","useEffect","useState","BookCardSearch","Header","SearchBar","Search","handleSubmit","searchResults","map","book","Array","isArray","volumeInfo","authors","title","imageLinks","thumbnail","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,MAAT,QAAuB,UAAvB,C,CACA;;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAG1B,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,GAAG,EAAC,QADN;AAEE,IAAA,KAAK,EAAC,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAEC,YADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAUIC,aAAa,CAACC,GAAd,CAAkBC,IAAI;AAAA;AACpB;AACA,sBAAC,cAAD,CACE;AADF;AAEE,IAAA,MAAM,EACJC,KAAK,CAACC,OAAN,CAAcF,IAAI,CAACG,UAAL,CAAgBC,OAA9B,IACIJ,IAAI,CAACG,UAAL,CAAgBC,OAAhB,CAAwB,CAAxB,CADJ,GAEI,gBALR;AAOE,IAAA,KAAK,EAAEJ,IAAI,CAACG,UAAL,CAAgBE,KAPzB;AAQE,IAAA,SAAS,EACP,OAAOL,IAAI,CAACG,UAAL,CAAgBG,UAAvB,KAAsC,WAAtC,GACIN,IAAI,CAACG,UAAL,CAAgBG,UAAhB,CAA2BC,SAD/B,GAEI,cAXR;AAaE,IAAA,GAAG,EAAEP,IAAI,CAACQ,EAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFoB,CAiBpB;AAjBF,GAVJ,CADF;AAiCD,CApCM","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { BookCardSearch } from './BookCardSearch'\nimport { Header } from './Header'\n// import './search.css'\nimport { SearchBar } from './SearchBar'\n\nexport const Search = () => {\n  \n\n  return (\n    <div>\n      <Header\n        key=\"search\"\n        title=\"Search\"\n      />\n      <SearchBar\n        onSubmit={handleSubmit}\n      />\n\n      {\n        searchResults.map(book => (\n          // console.log(typeof book.volumeInfo.imageLinks.thumbnail),\n          <BookCardSearch\n            // Since some entries had \"undefined\" as author, we need to check whether the author(s) exist or not.\n            author={\n              Array.isArray(book.volumeInfo.authors)\n                ? book.volumeInfo.authors[0]\n                : 'Unknown author'\n            }\n            title={book.volumeInfo.title}\n            thumbnail={\n              typeof book.volumeInfo.imageLinks !== \"undefined\"\n                ? book.volumeInfo.imageLinks.thumbnail\n                : \"Has no image\"\n            }\n            key={book.id}\n          />\n          // <p>{book.volumeInfo.title}</p>\n        ))\n      }\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}