{"ast":null,"code":"var _jsxFileName = \"/Users/axelhammarback/Technigo/W21 \\u2013\\xA0Final Project (Bookie)/project-bookie/client/src/pages/Search.js\";\nimport React, { useState } from 'react';\nimport { BookCardSearch } from '../components/BookCardSearch';\nimport { Header } from '../components/Header';\nimport ic_search_white from \"../assets/search-white.svg\";\nimport '../components/searchbar.css';\nexport const Search = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(''); // Function that takes the state variable searchQuery and uses it to search the Google Books API.\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(`https://www.googleapis.com/books/v1/volumes?q=\"${searchQuery}\"`).then(response => response.json()).then(books => {\n      setSearchResults(books.items);\n      setSearchQuery('');\n    }).catch(() => {\n      console.error();\n      setSearchResults('');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    icon: \"ic_search\",\n    title: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-search\",\n    type: \"text\",\n    placeholder: \"Search for a book or an author\",\n    value: searchQuery,\n    onChange: e => setSearchQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button-search\",\n    disabled: searchQuery < 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: ic_search_white,\n    alt: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, searchResults.map(book => /*#__PURE__*/React.createElement(BookCardSearch // Since some entries had \"undefined\" as author, we need to check whether the author(s) exist or not.\n  , {\n    author: Array.isArray(book.volumeInfo.authors) ? book.volumeInfo.authors[0] : 'Unknown author',\n    title: book.volumeInfo.title,\n    thumbnail: // Since some entries didn't have a thumbnail, we need to check whether the thumbnail exists or not.\n    typeof book.volumeInfo.imageLinks !== \"undefined\" ? book.volumeInfo.imageLinks.thumbnail : \"Has no image\",\n    key: book.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/client/src/pages/Search.js"],"names":["React","useState","BookCardSearch","Header","Search","searchResults","setSearchResults","searchQuery","setSearchQuery","handleSubmit","event","preventDefault","fetch","then","response","json","books","items","catch","console","error","e","target","value","ic_search_white","map","book","Array","isArray","volumeInfo","authors","title","imageLinks","thumbnail","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAEA,OAAO,6BAAP;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C,CAF0B,CAI1B;;AACA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AAEAC,IAAAA,KAAK,CAAE,kDAAiDL,WAAY,GAA/D,CAAL,CACGM,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,KAAD,IAAW;AACfV,MAAAA,gBAAgB,CAACU,KAAK,CAACC,KAAP,CAAhB;AACAT,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KALH,EAMGU,KANH,CAMS,MAAM;AACXC,MAAAA,OAAO,CAACC,KAAR;AACAd,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,KATH;AAUD,GAbD;;AAeA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE;AAAM,IAAA,QAAQ,EAAEG,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,gCAHd;AAIE,IAAA,KAAK,EAAEF,WAJT;AAKE,IAAA,QAAQ,EAAEc,CAAC,IAAIb,cAAc,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,QAAQ,EAAEhB,WAAW,GAAG,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,GAAG,EAAEiB,eAAV;AAA2B,IAAA,GAAG,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CARF,CALF,eAoBE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEInB,aAAa,CAACoB,GAAd,CAAkBC,IAAI,iBACpB,oBAAC,cAAD,CACE;AADF;AAEE,IAAA,MAAM,EACJC,KAAK,CAACC,OAAN,CAAcF,IAAI,CAACG,UAAL,CAAgBC,OAA9B,IACIJ,IAAI,CAACG,UAAL,CAAgBC,OAAhB,CAAwB,CAAxB,CADJ,GAEI,gBALR;AAOE,IAAA,KAAK,EAAEJ,IAAI,CAACG,UAAL,CAAgBE,KAPzB;AAQE,IAAA,SAAS,EACP;AACA,WAAOL,IAAI,CAACG,UAAL,CAAgBG,UAAvB,KAAsC,WAAtC,GACIN,IAAI,CAACG,UAAL,CAAgBG,UAAhB,CAA2BC,SAD/B,GAEI,cAZR;AAcE,IAAA,GAAG,EAAEP,IAAI,CAACQ,EAdZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CApBF,CADF;AA6CD,CAjEM","sourcesContent":["import React, { useState } from 'react'\n\nimport { BookCardSearch } from '../components/BookCardSearch'\nimport { Header } from '../components/Header'\nimport ic_search_white from '../assets/search-white.svg'\nimport '../components/searchbar.css'\n\nexport const Search = () => {\n  const [searchResults, setSearchResults] = useState([])\n  const [searchQuery, setSearchQuery] = useState('')\n\n  // Function that takes the state variable searchQuery and uses it to search the Google Books API.\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    fetch(`https://www.googleapis.com/books/v1/volumes?q=\"${searchQuery}\"`)\n      .then((response) => response.json())\n      .then((books) => {\n        setSearchResults(books.items);\n        setSearchQuery('');\n      })\n      .catch(() => {\n        console.error();\n        setSearchResults('');\n      })\n  }\n\n  return (\n    <div>\n      <Header\n        icon=\"ic_search\"\n        title=\"Search\"\n      />\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\"input-search\"\n          type=\"text\"\n          placeholder=\"Search for a book or an author\"\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n        />\n        <button\n          className=\"button-search\"\n          disabled={searchQuery < 1}\n        >\n          <img src={ic_search_white} alt=\"Search\"/>\n        </button>\n      </form>\n      <section className=\"card-list\">\n        {\n          searchResults.map(book => (\n            <BookCardSearch\n              // Since some entries had \"undefined\" as author, we need to check whether the author(s) exist or not.\n              author={\n                Array.isArray(book.volumeInfo.authors)\n                  ? book.volumeInfo.authors[0]\n                  : 'Unknown author'\n              }\n              title={book.volumeInfo.title}\n              thumbnail={\n                // Since some entries didn't have a thumbnail, we need to check whether the thumbnail exists or not.\n                typeof book.volumeInfo.imageLinks !== \"undefined\"\n                  ? book.volumeInfo.imageLinks.thumbnail\n                  : \"Has no image\"\n              }\n              key={book.id}\n            />\n          ))\n        }\n      </section>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}