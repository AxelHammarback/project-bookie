{"ast":null,"code":"var _jsxFileName = \"/Users/axelhammarback/Technigo/W21 \\u2013\\xA0Final Project (Bookie)/project-bookie/client/src/components/Search.js\";\nimport React, { useEffect, useState } from 'react';\nexport const Search = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(`https://www.googleapis.com/books/v1/volumes?q=\"${searchQuery}\"`).then(response => response.json()).then(json => {\n      setSearchResults(json);\n      setSearchQuery('');\n    }).catch(() => {\n      console.error();\n      setSearchResults('');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"debug grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search for a book or an author\",\n    value: searchQuery,\n    onChange: event => setSearchQuery(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Search\")), searchResults.map(book => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, book.volumeInfo.title)) // console.log(searchResults)\n  );\n};","map":{"version":3,"sources":["/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/client/src/components/Search.js"],"names":["React","useEffect","useState","Search","searchResults","setSearchResults","searchQuery","setSearchQuery","handleSubmit","e","preventDefault","fetch","then","response","json","catch","console","error","event","target","value","map","book","volumeInfo","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCH,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,KAAK,CAAE,kDAAiDL,WAAY,GAA/D,CAAL,CACCM,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOE,IAAD,IAAU;AACdT,MAAAA,gBAAgB,CAACS,IAAD,CAAhB;AACAP,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KALD,EAMCQ,KAND,CAMO,MAAM;AACXC,MAAAA,OAAO,CAACC,KAAR;AACAZ,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,KATD;AAWD,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,IAAA,QAAQ,EAAEG,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,gCAFd;AAGE,IAAA,KAAK,EAAEF,WAHT;AAIE,IAAA,QAAQ,EAAEY,KAAK,IAAIX,cAAc,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CAFF,EAYIhB,aAAa,CAACiB,GAAd,CAAkBC,IAAI,iBACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACC,UAAL,CAAgBC,KAApB,CADF,CAZJ,CAeI;AAfJ,GADF;AAoBD,CAxCM","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nexport const Search = () => {\n  const [searchResults, setSearchResults] = useState([])\n  const [searchQuery, setSearchQuery] = useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    fetch(`https://www.googleapis.com/books/v1/volumes?q=\"${searchQuery}\"`)\n    .then((response) => response.json())\n    .then((json) => {\n      setSearchResults(json);\n      setSearchQuery('');\n    })\n    .catch(() => {\n      console.error();\n      setSearchResults('');\n    })\n\n  }\n\n  return (\n    <div className=\"debug grow\">\n      <p>Search</p>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Search for a book or an author\"\n          value={searchQuery}\n          onChange={event => setSearchQuery(event.target.value)}\n        />\n        <button>Search</button>\n      </form>\n      {\n        searchResults.map(book => (\n          <p>{book.volumeInfo.title}</p>\n        ))\n        // console.log(searchResults)\n      }\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}