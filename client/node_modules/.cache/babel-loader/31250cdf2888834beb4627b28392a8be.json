{"ast":null,"code":"var _jsxFileName = \"/Users/axelhammarback/Technigo/W21 \\u2013\\xA0Final Project (Bookie)/project-bookie/client/src/components/HasRead.js\";\nimport React from 'react';\nexport const HasRead = () => {\n  const BOOKS_URL = 'http://localhost:8080/books/isRead';\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    fetchBooks();\n  }, []);\n\n  const fetchBooks = () => {\n    // do a fetch to the local database\n    fetch(BOOKS_URL).then(res => {\n      // convert the resonse into json format\n      console.log(res);\n      return res.json();\n    }).then(data => {\n      // NEED TO FILTER ON BOOKS WITH THE ISREAD=FALSE FLAG HERE\n      const filteredBooks = data.filter(book => book.title);\n      setBooks(filteredBooks);\n      console.log(\"filteredBooks\");\n      console.log(filteredBooks);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"debug grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"Has read\"));\n};","map":{"version":3,"sources":["/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/client/src/components/HasRead.js"],"names":["React","HasRead","BOOKS_URL","books","setBooks","useState","useEffect","fetchBooks","fetch","then","res","console","log","json","data","filteredBooks","filter","book","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,QAAMC,SAAS,GAAG,oCAAlB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,MAAM;AACvB;AACAC,IAAAA,KAAK,CAACN,SAAD,CAAL,CACGO,IADH,CACSC,GAAD,IAAS;AACb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAOA,GAAG,CAACG,IAAJ,EAAP;AACD,KALH,EAMGJ,IANH,CAMSK,IAAD,IAAU;AACd;AACA,YAAMC,aAAa,GAAGD,IAAI,CAACE,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,KAAzB,CAAtB;AACAd,MAAAA,QAAQ,CAACW,aAAD,CAAR;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYG,aAAZ;AACD,KAZH;AAaD,GAfD;;AAiBA,sBACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADA;AAKD,CA9BM","sourcesContent":["import React from 'react';\n\nexport const HasRead = () => {\n  const BOOKS_URL = 'http://localhost:8080/books/isRead'\n  const [books, setBooks] = useState([])\n\n  useEffect(() => {\n    fetchBooks()\n  }, [])\n\n  const fetchBooks = () => {\n    // do a fetch to the local database\n    fetch(BOOKS_URL)\n      .then((res) => {\n        // convert the resonse into json format\n        console.log(res)\n        return res.json()\n      })\n      .then((data) => {\n        // NEED TO FILTER ON BOOKS WITH THE ISREAD=FALSE FLAG HERE\n        const filteredBooks = data.filter(book => book.title)\n        setBooks(filteredBooks)\n        console.log(\"filteredBooks\")\n        console.log(filteredBooks)\n      })\n  }\n\n  return (\n  <div className=\"debug grow\">\n    <p>Has read</p>\n  </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}