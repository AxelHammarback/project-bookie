{"ast":null,"code":"var _jsxFileName = \"/Users/axelhammarback/Technigo/W21 \\u2013\\xA0Final Project (Bookie)/project-bookie/client/src/components/WantToRead.js\";\nimport React, { useEffect, useState } from 'react';\nimport { BookCardWantToRead } from './BookCardWantToRead';\nexport const WantToRead = () => {\n  const BOOKS_URL = 'http://localhost:8080/books/wantToRead';\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    fetchBooks();\n  }, []);\n\n  const fetchBooks = () => {\n    // do a fetch to the local database\n    fetch(BOOKS_URL).then(res => {\n      // convert the resonse into json format\n      console.log(res);\n      return res.json();\n    }).then(data => {\n      // NEED TO FILTER ON BOOKS WITH THE ISREAD=FALSE FLAG HERE\n      const filteredBooks = data.filter(book => book.title);\n      setBooks(filteredBooks);\n      console.log(\"filteredBooks\");\n      console.log(filteredBooks);\n    });\n  };\n\n  const deleteBook = googleId => {\n    fetch(`localhost:8080/books/${googleId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        googleId: googleId\n      })\n    }).then(() => {\n      console.log(`Book with ID: ${googleId} deleted from database.`);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"debug grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, books.map(book => /*#__PURE__*/React.createElement(BookCardWantToRead, {\n    author: book.author,\n    title: book.title,\n    googleId: book.googleId,\n    isRead: book.isRead,\n    thumbnail: book.thumbnail,\n    key: book._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }))));\n}; // author: \"Hanna Johansson\"\n// dateRead: null\n// googleId: \"q2jvDwAAQBAJ\"\n// isRead: false\n// thumbnail: \"http://books.google.com/books/content?id=q2jvDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api\"\n// title: \"Antiken\"\n// __v: 0\n// _id: \"600c8a52da9eefdad186ace8\"","map":{"version":3,"sources":["/Users/axelhammarback/Technigo/W21 – Final Project (Bookie)/project-bookie/client/src/components/WantToRead.js"],"names":["React","useEffect","useState","BookCardWantToRead","WantToRead","BOOKS_URL","books","setBooks","fetchBooks","fetch","then","res","console","log","json","data","filteredBooks","filter","book","title","deleteBook","googleId","method","headers","body","JSON","stringify","map","author","isRead","thumbnail","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,QAAMC,SAAS,GAAG,wCAAlB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,MAAM;AACvB;AACAC,IAAAA,KAAK,CAACJ,SAAD,CAAL,CACGK,IADH,CACSC,GAAD,IAAS;AACb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAOA,GAAG,CAACG,IAAJ,EAAP;AACD,KALH,EAMGJ,IANH,CAMSK,IAAD,IAAU;AACd;AACA,YAAMC,aAAa,GAAGD,IAAI,CAACE,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,KAAzB,CAAtB;AACAZ,MAAAA,QAAQ,CAACS,aAAD,CAAR;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYG,aAAZ;AACD,KAZH;AAaD,GAfD;;AAkBA,QAAMI,UAAU,GAAIC,QAAD,IAAc;AAC/BZ,IAAAA,KAAK,CAAE,wBAAuBY,QAAS,EAAlC,EAAqC;AACxCC,MAAAA,MAAM,EAAE,QADgC;AAExCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF+B;AAGxCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACL,QAAAA,QAAQ,EAAEA;AAAX,OAAf;AAHkC,KAArC,CAAL,CAKGX,IALH,CAKQ,MAAM;AACVE,MAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBQ,QAAS,yBAAtC;AACD,KAPH;AAQD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIf,KAAK,CAACqB,GAAN,CAAUT,IAAI,iBACZ,oBAAC,kBAAD;AACE,IAAA,MAAM,EAAEA,IAAI,CAACU,MADf;AAEE,IAAA,KAAK,EAAEV,IAAI,CAACC,KAFd;AAGE,IAAA,QAAQ,EAAED,IAAI,CAACG,QAHjB;AAIE,IAAA,MAAM,EAAEH,IAAI,CAACW,MAJf;AAKE,IAAA,SAAS,EAAEX,IAAI,CAACY,SALlB;AAME,IAAA,GAAG,EAAEZ,IAAI,CAACa,GANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF,CADF;AAkBD,CAvDM,C,CAyDP;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { BookCardWantToRead } from './BookCardWantToRead'\n\nexport const WantToRead = () => {\n  const BOOKS_URL = 'http://localhost:8080/books/wantToRead'\n  const [books, setBooks] = useState([])\n\n  useEffect(() => {\n    fetchBooks()\n  }, [])\n\n  const fetchBooks = () => {\n    // do a fetch to the local database\n    fetch(BOOKS_URL)\n      .then((res) => {\n        // convert the resonse into json format\n        console.log(res)\n        return res.json()\n      })\n      .then((data) => {\n        // NEED TO FILTER ON BOOKS WITH THE ISREAD=FALSE FLAG HERE\n        const filteredBooks = data.filter(book => book.title)\n        setBooks(filteredBooks)\n        console.log(\"filteredBooks\")\n        console.log(filteredBooks)\n      })\n  }\n\n\n  const deleteBook = (googleId) => {\n    fetch(`localhost:8080/books/${googleId}`, {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({googleId: googleId})\n    })\n      .then(() => {\n        console.log(`Book with ID: ${googleId} deleted from database.`)\n      })\n  }\n\n  return (\n    <div className=\"debug grow\">\n      <section className=\"card-list\">\n        {\n          books.map(book => (\n            <BookCardWantToRead\n              author={book.author}\n              title={book.title}\n              googleId={book.googleId}\n              isRead={book.isRead}\n              thumbnail={book.thumbnail}\n              key={book._id}\n            />\n          ))\n        }\n      </section>\n    </div>\n  )\n}\n\n// author: \"Hanna Johansson\"\n// dateRead: null\n// googleId: \"q2jvDwAAQBAJ\"\n// isRead: false\n// thumbnail: \"http://books.google.com/books/content?id=q2jvDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api\"\n// title: \"Antiken\"\n// __v: 0\n// _id: \"600c8a52da9eefdad186ace8\""]},"metadata":{},"sourceType":"module"}